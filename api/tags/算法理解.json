{"name":"算法理解","postlist":[{"title":"算法理解","slug":"算法理解","date":"2020-09-18T11:14:53.000Z","updated":"2021-09-13T03:47:33.301Z","comments":true,"path":"api/articles/算法理解.json","excerpt":null,"keywords":null,"cover":"https://images.weserv.nl/?url=https://gitee.com/cocacolalc/imgs-hexo/raw/master/img/photo-1621940022939-67cbe6a348d8.jpg","content":"<p><img src=\"https://images.weserv.nl/?url=https://gitee.com/cocacolalc/imgs-hexo/raw/master/img/photo-1621940022939-67cbe6a348d8.jpg\" alt=\"img\"></p>\n<h5 id=\"两数之和：\"><a href=\"#两数之和：\" class=\"headerlink\" title=\"两数之和：\"></a>两数之和：</h5><p>​    思路（javaScript）：使用map函数，利用差值判断并返回值。</p>\n<p>​    代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><br><span class=\"hljs-keyword\">var</span> findSum=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">nums,target</span>)</span>&#123;<br>    <span class=\"hljs-keyword\">let</span>  map=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>();<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>,len=nums.length;i&lt;len;i++)&#123;<br>        <br>        <span class=\"hljs-comment\">//利用差值判断是否有存在与其对应的值</span><br>        <span class=\"hljs-keyword\">let</span> key =target-nums[i]<br>        <span class=\"hljs-keyword\">if</span>(map.has(key))&#123;<br>            <span class=\"hljs-keyword\">return</span> [map.get(key),i]<br>        &#125;<br>        map.set(nums[i],i)<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"整数反转：\"><a href=\"#整数反转：\" class=\"headerlink\" title=\"整数反转：\"></a>整数反转：</h5><p>​    思路（javaScript）：利用对10取余，向下取整，二者对应的思想</p>\n<p>​    代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> fn=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">num</span>)</span>&#123;<br>    <span class=\"hljs-keyword\">let</span> res=<span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">while</span>(num)&#123;<br>        res=res*<span class=\"hljs-number\">10</span>+num%<span class=\"hljs-number\">10</span><br>        <span class=\"hljs-comment\">//res &gt; Math.pow(2, 31) - 1 || res &lt; Math.pow(-2, 31)字节的最小和最大</span><br>        <span class=\"hljs-keyword\">if</span>(res &gt; <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">31</span>) - <span class=\"hljs-number\">1</span> || res &lt; <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">-2</span>, <span class=\"hljs-number\">31</span>))&#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>        &#125;<br>        <span class=\"hljs-comment\">// ~~可以理解向下取整，类似Math.floor()</span><br>        num=~~(num/<span class=\"hljs-number\">10</span>)<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> res<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"正序数组的中位数：\"><a href=\"#正序数组的中位数：\" class=\"headerlink\" title=\"正序数组的中位数：\"></a>正序数组的中位数：</h5><p>思路（javaScript）：合并数组（concat）并排序（.sort（a,b）=&gt;a-b），在用下标对2取余如果是奇数就就取[nums  .length / 2],如果是偶数就取(nums[nums.length/2-1]+nums[nums/2])/2</p>\n<p>代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> find = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">nums1, nums2</span>) </span>&#123;<br>       <span class=\"hljs-keyword\">let</span> nums = nums1.concat(nums2).sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a - b)<br>       <span class=\"hljs-keyword\">return</span> nums.length % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span> ? (nums[nums.length / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">1</span>] + nums[nums.length / <span class=\"hljs-number\">2</span>]) / <span class=\"hljs-number\">2</span> : nums[<span class=\"hljs-built_in\">Math</span>.floor(nums<br>          .length / <span class=\"hljs-number\">2</span>)]<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n","raw":null,"categories":[],"tags":[{"name":"算法理解","path":"api/tags/算法理解.json"}]}]}